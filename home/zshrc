HISTFILE=~/.histfile
HISTSIZE=2000
SAVEHIST=2000

setopt appendhistory extendedglob hist_find_no_dups autocd hist_ignore_dups
unsetopt beep
typeset -U PATH

# Completion
autoload -Uz compinit
compinit
setopt completealiases
zstyle ':completion:*' menu yes select
zstyle ':completion:*:*:xdvi:*' file-sort time
zstyle ':completion:*:cd:*' ignore-parents parent pwd
zstyle ':completion:*' use-cache on
zstyle ':completion:*' cache-path ~/.cache/zsh

# Prompt
# https://wiki.archlinux.org/index.php/zsh#Customizing_the_prompt
autoload -U promptinit && promptinit
autoload -U colors && colors
black="%{$fg[black]%}"
green="%{$fg[green]%}"
blue="%{$fg[blue]%}"
cyan="%{$fg[cyan]%}"
red="%{$fg[red]%}"
yellow="%{$fg[yellow]%}"
magneta="%{$fg[magneta]%}"
white="%{$fg[white]%}"
reset="%{$reset_color%}"
PROMPT="$yellow(%n@%m)$reset:$green%3~$red%#$reset "

# vim mode indicator
vim_ins_mode="%{$fg[yellow]%}[INS]%{$reset_color%}"
vim_cmd_mode="%{$fg[red]%}[CMD]%{$reset_color%}"
vim_mode=$vim_ins_mode

function zle-keymap-select {
  vim_mode="${${KEYMAP/vicmd/${vim_cmd_mode}}/(main|viins)/${vim_ins_mode}}"
  zle reset-prompt
}
zle -N zle-keymap-select

function zle-line-finish {
  vim_mode=$vim_ins_mode
}
zle -N zle-line-finish

# Fix a bug when you C-c in CMD mode and you'd be prompted with CMD mode indicator, while in fact you would be in INS mode
# Fixed by catching SIGINT (C-c), set vim_mode to INS and then repropagate the SIGINT, so if anything else depends on it, we will not break it
# Thanks Ron! (see comments)
function TRAPINT() {
  vim_mode=$vim_ins_mode
  return $(( 128 + $1 ))
}

# load git-prompt
setopt prompt_subst
autoload -Uz vcs_info
zstyle ':vcs_info:*' actionformats '%F{5}(%f%s%F{5})%F{3}-%F{5}[%F{2}%b%F{3}|%F{1}%a%F{5}]%f '
zstyle ':vcs_info:*' formats '%F{5}(%f%s%F{5})%F{3}-%F{5}[%F{2}%b%F{5}]%f '
zstyle ':vcs_info:(sv[nk]|bzr):*' branchformat '%b%F{1}:%F{3}%r'
zstyle ':vcs_info:*' enable git cvs svn

# or use pre_cmd, see man zshcontrib
vcs_info_wrapper() {
  vcs_info
  if [ -n "$vcs_info_msg_0_" ]; then
    echo "%{$fg[grey]%}${vcs_info_msg_0_}%{$reset_color%}$del"
  fi
}
RPROMPT=$'${vim_mode} $(vcs_info_wrapper)'

# Keybinds
bindkey -v
KEYTIMEOUT=1 # instant mode switch
autoload zkbd
ZKBDDIR=${ZDOTDIR:-$HOME}/.zkbd
ZKBDFILE=$ZKBDDIR/$TERM
if [ -r $ZKBDFILE ]; then
	source $ZKBDFILE
	[ -n ${key[Backspace]}	] && bindkey "${key[Backspace]}"	backward-delete-char
	[ -n ${key[Insert]}		] && bindkey "${key[Insert]}"		overwrite-mode
	[ -n ${key[Home]}		] && bindkey "${key[Home]}"			beginning-of-line
	[ -n ${key[PageUp]}		] && bindkey "${key[PageUp]}"		up-line-or-history
	[ -n ${key[Delete]}		] && bindkey "${key[Delete]}"		delete-char
	[ -n ${key[End]}		] && bindkey "${key[End]}"			end-of-line
	[ -n ${key[PageDown]}	] && bindkey "${key[PageDown]}"		down-line-or-history
	[ -n ${key[Up]}			] && bindkey "${key[Up]}"			up-line-or-search
	[ -n ${key[Left]}		] && bindkey "${key[Left]}"			backward-char
	[ -n ${key[Down]}		] && bindkey "${key[Down]}"			down-line-or-search
	[ -n ${key[Right]}		] && bindkey "${key[Right]}"		forward-char
	
	# History search based on current input
	[ -n "${key[Up]}"		] && bindkey "${key[Up]}"		history-beginning-search-backward
	[ -n "${key[Down]}"		] && bindkey "${key[Down]}"		history-beginning-search-forward
	[ -n "${key[PageUp]}"	] && bindkey "${key[PageUp]}"	history-search-backward
	[ -n "${key[PageDown]}"	] && bindkey "${key[PageDown]}"	history-search-forward
else
	echo "No zkbd settings found for this terminal!"
	echo "Please run the zkbd command and follow the instruction to properly configure your keys."
fi


# Better history search with C-r and C-s
bindkey "^R" history-incremental-pattern-search-backward
bindkey "^S" history-incremental-pattern-search-forward

# cd -<NUMBER> to access recent directory list
# {{{ This will remember the dirstack across sessions
DIRSTACKFILE="$HOME/.cache/zsh/dirs"
[[ -f $DIRSTACKFILE ]] || mkdir -p `dirname $DIRSTACKFILE` && touch $DIRSTACKFILE
if [[ -f $DIRSTACKFILE ]] && [[ $#dirstack -eq 0 ]]; then
  dirstack=( ${(f)"$(< $DIRSTACKFILE)"} )
  # Uncomment to remember and change to the last directory across sessions
  # [[ -d $dirstack[1] ]] && cd $dirstack[1]
fi
chpwd() {
  print -l $PWD ${(u)dirstack} >$DIRSTACKFILE
}
# }}}

DIRSTACKSIZE=20

setopt autopushd pushdsilent pushdtohome

## Remove duplicate entries
setopt pushdignoredups

## This reverts the +/- operators.
setopt pushdminus

# Load my settings
for i in ~/.shellrc/*.sh; do
	source $i
done
